{"version":3,"sources":["utils.js","components/App.js","serviceWorker.js","index.js"],"names":["formatter","Intl","NumberFormat","style","currency","minimumFractionDigits","getPV","rate","numberOfPeriods","PaymentAmount","Math","pow","App","props","_useState","useState","_useState2","Object","slicedToArray","formItemLayout","Title","Typography","_useState3","_useState4","mpi","setMpi","_useState5","_useState6","mbeu","setMbeu","_useState7","_useState8","apt","setApt","_useState9","_useState10","mi","setMi","_useState11","_useState12","interest","setInterest","_useState13","_useState14","tom","setTom","_useState15","_useState16","_useState17","_useState18","frontDti","setFrontDti","_useState19","_useState20","backDti","setBackDti","_useState21","_useState22","_useState23","_useState24","_useState25","_useState26","_useState27","_useState28","_useState29","_useState30","_useState31","_useState32","Option","Select","getM3","getMaxMonthlyPayment","parseFloat","min","toFixed","getMonthlyMI","react_default","a","createElement","Fragment","className","level","icon","type","theme","es_form","layout","Item","assign","label","input_number","size","defaultValue","value","concat","replace","parser","onChange","es_select","width","format","statistic","title","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","src_components_App","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.03aa0769.chunk.js","sourcesContent":["export function randomArrayValue(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function isEmpty(value) {\n  return value === \"\" ? true : false;\n}\n\nexport const formatter = new Intl.NumberFormat(\"en-US\", {\n  style: \"currency\",\n  currency: \"USD\",\n  minimumFractionDigits: 2\n});\n\nexport const getPV = (rate, numberOfPeriods, PaymentAmount) => {\n  return (PaymentAmount / rate) * (1 - Math.pow(1 + rate, -numberOfPeriods));\n};\nexport const getLoanPV = (rate, numberOfPeriods, PaymentAmount) => {\n  return PaymentAmount * ((1 - Math.pow(1 + rate, -numberOfPeriods)) / rate);\n};\n\n// import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n// import { faCircleNotch } from \"@fortawesome/free-solid-svg-icons\";\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { Form, Input, InputNumber, Select, Statistic } from \"antd\";\nimport { List, Typography, Icon } from \"antd\";\nimport { formatter, getPV, getLoanPV } from \"../../src/utils.js\";\nimport \"./App.scss\";\nimport \"./Form.scss\";\nimport \"antd/dist/antd.css\";\n\nconst App = props => {\n  // antd\n  const [formLayout, setFormLayout] = useState(\"horizontal\");\n  const formItemLayout = {\n    // labelCol: { span: 12 },\n    // wrapperCol: { span: 12 }\n  };\n\n  const { Title } = Typography;\n\n  // Inputs\n  const [mpi, setMpi] = useState(1000); // Monthly Pretax Income // Number\n  const [mbeu, setMbeu] = useState(200); // Monthly bills excluding utilities // Number\n  const [apt, setApt] = useState(1000); // Annual Property Taxes/Insurance // Number\n  const [mi, setMi] = useState(0.0085); // MI Rate //  Number\n  const [interest, setInterest] = useState(0.035); // Interest rate // Number\n  const [tom, setTom] = useState(30);\n  const [term, setTerm] = useState(30); // Dropdown for 10 15 20 30\n  const [frontDti, setFrontDti] = useState(0.43); // Dropdown for 36%, 29% or 46.99 OR 40%\n  const [backDti, setBackDti] = useState(0.4955); //  Dropdown for 49.99% or 41% or 56.99%\n\n  // Results\n  const [maxMonthlyPayment, setMaxMonthlyPayment] = useState(0); // mpi * frontDTI\n  const [monthlyPropertyTaxes, setMonthlyPropertyTaxes] = useState(0);\n  const [maxMonthlyPaymentNoTaxes, setMaxMonthlyPaymentNoTaxes] = useState(0);\n  const [maxBackendPayment, setMaxBackendPayment] = useState(0);\n  const [\n    maxBackendPaymentPercantage,\n    setMaxBackendPaymentPercantage\n  ] = useState(0);\n  const [isPayment, setIsPayment] = useState(true);\n  // Calculations\n\n  // handleChanges\n  const handleMPI = value => {\n    setMpi(value);\n  };\n  const handleMBEU = value => {\n    setMbeu(value);\n  };\n  const handleAPT = value => {\n    setApt(value);\n  };\n  const handleMI = value => {\n    setMi(value / 100);\n  };\n  const handleInterest = value => {\n    setInterest(value / 100);\n  };\n  const handleTOM = value => {\n    setTom(value);\n  };\n\n  const { Option } = Select;\n  const handleTerm = value => {\n    setTerm(value);\n  };\n\n  const handleFrontDti = value => {\n    setFrontDti(parseFloat((value / 100).toFixed(4)));\n  };\n  const handleBackDti = value => {\n    setBackDti(parseFloat((value / 100).toFixed(4)));\n  };\n\n  //get\n\n  const getM1 = () => {\n    return Math.min(mpi * frontDti);\n  };\n  const getM2 = () => {\n    return backDti * mpi - mbeu;\n  };\n  const getM3 = () => {\n    return getMaxMonthlyPayment() - apt / 12;\n  };\n\n  const getMaxMonthlyPayment = () => {\n    return parseFloat(Math.min(getM1(), getM2()).toFixed(4));\n  };\n  const getLoanBasedOnPI = () => {\n    return getPV(interest / 12, tom * 12, getM3());\n  };\n\n  const getMonthlyMI = () => {\n    return (mi * getLoanBasedOnPI()) / 12;\n  };\n\n  const getFinalLoan = () => {\n    return getPV(interest / 12, tom * 12, -getM3() + getMonthlyMI()) * -1;\n  };\n  /*\n  const getMonthlyPropertyTaxes = () => {\n    return parseFloat((apt / 12).toFixed(2));\n  };\n  const getMaxMonthlyPaymentNoTaxes = () => {\n    return parseFloat(\n      (getMaxMonthlyPayment() - getMonthlyPropertyTaxes()).toFixed(2)\n    );\n  };\n\n  const getMaxBackendPayment = () => {\n    return parseFloat((getMaxMonthlyPaymentNoTaxes() + mbeu).toFixed(2));\n  };\n\n  const getMaxBackendPaymentPercent = () => {\n    const results = parseFloat((getMaxBackendPayment() / mpi).toFixed(4) * 100);\n    return results;\n  };\n\n  const getMaxPaymentOrLoan = () => {\n    const PV = getPV(mi / 12, term * 12, getMaxMonthlyPaymentNoTaxes());\n    if (getMaxBackendPaymentPercent() < backDti * 100) {\n      if (!isPayment) {\n        setIsPayment(true);\n      }\n      return `Maximum payment: ${formatter.format(PV)}`;\n    } else if (getMaxBackendPaymentPercent() > backDti * 100) {\n      if (isPayment) {\n        setIsPayment(false);\n      }\n      return `Maximum Loan: ${formatter.format(PV)}`;\n    }\n  };\n*/\n  return (\n    <>\n      <div className=\"container\">\n        <Title level={2}>\n          <Icon type=\"calculator\" theme=\"twoTone\" /> Home Affordability\n          Calculator\n        </Title>\n        <Form layout=\"vertical\" className=\"form\">\n          <Form.Item label=\"Monthly income\" {...formItemLayout}>\n            <InputNumber\n              size=\"large\"\n              defaultValue={1000}\n              formatter={value =>\n                `$ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\n              }\n              parser={value => value.replace(/\\$\\s?|(,*)/g, \"\")}\n              onChange={handleMPI}\n            />\n          </Form.Item>\n\n          <Form.Item label=\"Front end DTI\" {...formItemLayout}>\n            <Select\n              size=\"large\"\n              defaultValue=\"43%\"\n              style={{ width: 88 }}\n              onChange={handleFrontDti}\n            >\n              <Option value={29}>29%</Option>\n              <Option value={36}>36%</Option>\n              <Option value={43}>43%</Option>\n              <Option value={46.99}>46.99%</Option>\n            </Select>\n          </Form.Item>\n\n          <Form.Item\n            label=\"Monthly bills excluding utilities\"\n            {...formItemLayout}\n          >\n            <InputNumber\n              size=\"large\"\n              defaultValue={200}\n              formatter={value =>\n                `$ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\n              }\n              parser={value => value.replace(/\\$\\s?|(,*)/g, \"\")}\n              onChange={handleMBEU}\n            />\n          </Form.Item>\n\n          <Form.Item label=\"Back end DTI\" {...formItemLayout}>\n            <Select\n              size=\"large\"\n              defaultValue=\"49.55%\"\n              style={{ width: 88 }}\n              onChange={handleBackDti}\n            >\n              <Option value={41}>41%</Option>\n              <Option value={49.55}>49.55%</Option>\n              <Option value={56.99}>56.99%</Option>\n            </Select>\n          </Form.Item>\n\n          <Form.Item label=\"Maximum Monthly Payment\" {...formItemLayout}>\n            <strong>{formatter.format(getMaxMonthlyPayment())}</strong>\n          </Form.Item>\n\n          <Form.Item\n            label=\"Annual Property Taxes/Insurance\"\n            {...formItemLayout}\n          >\n            <InputNumber\n              size=\"large\"\n              defaultValue={1000}\n              formatter={value =>\n                `$ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\n              }\n              parser={value => value.replace(/\\$\\s?|(,*)/g, \"\")}\n              onChange={handleAPT}\n            />\n          </Form.Item>\n\n          <Form.Item label=\"Term of Mortgage (years):\" {...formItemLayout}>\n            <InputNumber\n              size=\"large\"\n              defaultValue={30}\n              formatter={value =>\n                `${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\n              }\n              parser={value => value.replace(/\\$\\s?|(,*)/g, \"\")}\n              onChange={handleTOM}\n            />\n          </Form.Item>\n\n          <Form.Item label=\"Interest Rate\" {...formItemLayout}>\n            <InputNumber\n              size=\"large\"\n              // Interest Rate\n              defaultValue={3.5}\n              formatter={value =>\n                `${value} %`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\n              }\n              parser={value => value.replace(/\\$\\s?|(,*)/g, \"\")}\n              onChange={handleInterest}\n            />\n          </Form.Item>\n\n          <Form.Item label=\"MI Rate\" {...formItemLayout}>\n            <InputNumber\n              size=\"large\"\n              // handleMI : MI Rate\n              defaultValue={0.85}\n              formatter={value =>\n                `${value} %`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\n              }\n              parser={value => value.replace(/\\$\\s?|(,*)/g, \"\")}\n              onChange={handleMI}\n            />\n          </Form.Item>\n\n          <Form.Item className=\"result\" {...formItemLayout}>\n            <Statistic\n              title=\"Final Loan\"\n              value={formatter.format(getFinalLoan())}\n            />\n          </Form.Item>\n\n          {/* <Form.Item label=\"Term\" {...formItemLayout}>\n            <Select\n              defaultValue={30}\n              style={{ width: 88 }}\n              onChange={handleTerm}\n            >\n              <Option value={10}>10</Option>\n              <Option value={15}>15</Option>\n              <Option value={20}>20</Option>\n              <Option value={30}>30</Option>\n            </Select>\n          </Form.Item> */}\n        </Form>\n\n        {/*  \n        <ul className=\"results\">\n          <li>\n            Maximum Monthly Payment:{\" \"}\n            <strong>{formatter.format(getMaxMonthlyPayment())}</strong>\n          </li>\n          <li>\n            Monthly Property Taxes:{\" \"}\n            <strong>{formatter.format(getMonthlyPropertyTaxes())}</strong>\n          </li>\n          <li>\n            Max monthly payment minus taxes:{\" \"}\n            <strong>{formatter.format(getMaxMonthlyPaymentNoTaxes())}</strong>\n          </li>\n\n          <li>\n            Maxmimum Backend Payment:{\" \"}\n            <strong>{formatter.format(getMaxBackendPayment())}</strong>\n          </li>\n\n          <li>\n            Maximum backend payment percent :{\" \"}\n            <strong>{getMaxBackendPaymentPercent()}%</strong>\n          </li>\n          <li className=\"result\">{getMaxPaymentOrLoan()}</li>\n        </ul>\n        <div className=\"test\">\n          <p>\n            Test 2: IF line 21 is GREATER than 11 then show result line as\n            \"Maximum loan\" <strong>{backDti * mpi}</strong>\n          </p>\n          <p>\n            <strong>{(backDti * mpi - apt / 12 - mbeu).toFixed(4)}</strong>{\" \"}\n            subtract out property taxes and monthly bills\n          </p>\n          <p>\n            If line 28 then calculate and show result as \"Maximum loan\" ::{\" \"}\n            <strong>\n              {formatter.format(\n                getPV(\n                  mi / 12,\n                  term * 12,\n                  (backDti * mpi - apt / 12 - mbeu).toFixed(4)\n                )\n              )}\n            </strong>\n          </p>\n        </div> */}\n      </div>\n    </>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n// import AppRouter from './components/Router';\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\nserviceWorker.register();\n"],"sourceRoot":""}