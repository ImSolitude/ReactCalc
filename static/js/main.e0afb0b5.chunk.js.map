{"version":3,"sources":["utils.js","components/App.js","serviceWorker.js","index.js"],"names":["formatter","Intl","NumberFormat","style","currency","minimumFractionDigits","App","props","_useState","useState","_useState2","Object","slicedToArray","formItemLayout","labelCol","span","wrapperCol","_useState3","_useState4","mpi","setMpi","_useState5","_useState6","mbeu","setMbeu","_useState7","_useState8","apt","setApt","_useState9","_useState10","mi","setMi","_useState11","_useState12","setInterest","_useState13","_useState14","term","setTerm","_useState15","_useState16","frontDti","setFrontDti","_useState17","_useState18","backDti","setBackDti","_useState19","_useState20","_useState21","_useState22","_useState23","_useState24","_useState25","_useState26","_useState27","_useState28","_useState29","_useState30","isPayment","setIsPayment","Option","Select","getMaxMonthlyPayment","parseFloat","toFixed","getMonthlyPropertyTaxes","getMaxMonthlyPaymentNoTaxes","getMaxBackendPayment","getMaxBackendPaymentPercent","react_default","a","createElement","Fragment","className","es_form","layout","Item","assign","label","input_number","defaultValue","value","concat","replace","parser","onChange","es_select","width","format","rate","numberOfPeriods","PV","Math","pow","getMaxPaymentOrLoan","Boolean","window","location","hostname","match","ReactDOM","render","src_components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e0afb0b5.chunk.js","sourcesContent":["export function randomArrayValue(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function isEmpty(value) {\n  return value === \"\" ? true : false;\n}\n\nexport const formatter = new Intl.NumberFormat(\"en-US\", {\n  style: \"currency\",\n  currency: \"USD\",\n  minimumFractionDigits: 2\n});\n\nexport const getPV = (rate, numberOfPeriods, PaymentAmount) => {\n  return (PaymentAmount / rate) * (1 - Math.pow(1 + rate, -numberOfPeriods));\n};\n\n// import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n// import { faCircleNotch } from \"@fortawesome/free-solid-svg-icons\";\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { Form, Input, InputNumber, Select } from \"antd\";\nimport { List, Typography } from \"antd\";\nimport { formatter, getPV } from \"../../src/utils.js\";\nimport \"./App.scss\";\nimport \"antd/dist/antd.css\";\n\nconst App = props => {\n  // antd\n  const [formLayout, setFormLayout] = useState(\"horizontal\");\n  const formItemLayout = {\n    labelCol: { span: 12 },\n    wrapperCol: { span: 12 }\n  };\n\n  // Inputs\n  const [mpi, setMpi] = useState(5000); // Monthly Pretax Income // Number\n  const [mbeu, setMbeu] = useState(500); // Monthly bills excluding utilities // Number\n  const [apt, setApt] = useState(2500); // Annual Property Taxes/Insurance // Number\n  const [mi, setMi] = useState(0.035); // MI Rate //  Number\n  const [interest, setInterest] = useState(3.5); // Interest rate // Number\n  const [term, setTerm] = useState(30); // Dropdown for 10 15 20 30\n  const [frontDti, setFrontDti] = useState(0.43); // Dropdown for 36%, 29% or 46.99 OR 40%\n  const [backDti, setBackDti] = useState(0.4999); //  Dropdown for 49.99% or 41% or 56.99%\n\n  // Results\n  const [maxMonthlyPayment, setMaxMonthlyPayment] = useState(0); // mpi * frontDTI\n  const [monthlyPropertyTaxes, setMonthlyPropertyTaxes] = useState(0);\n  const [maxMonthlyPaymentNoTaxes, setMaxMonthlyPaymentNoTaxes] = useState(0);\n  const [maxBackendPayment, setMaxBackendPayment] = useState(0);\n  const [\n    maxBackendPaymentPercantage,\n    setMaxBackendPaymentPercantage\n  ] = useState(0);\n  const [isPayment, setIsPayment] = useState(true);\n  // Calculations\n\n  // handleChanges\n  const handleMPI = value => {\n    setMpi(value);\n  };\n  const handleMBEU = value => {\n    setMbeu(value);\n  };\n  const handleAPT = value => {\n    setApt(value);\n  };\n  const handleMI = value => {\n    setMi(value / 100);\n  };\n  const handleInterest = value => {\n    setInterest(value / 100);\n  };\n\n  const { Option } = Select;\n  const handleTerm = value => {\n    setTerm(value);\n  };\n\n  const handleFrontDti = value => {\n    setFrontDti(parseFloat((value / 100).toFixed(4)));\n  };\n  const handleBackDti = value => {\n    setBackDti(parseFloat((value / 100).toFixed(4)));\n  };\n\n  const getMaxMonthlyPayment = () => {\n    return parseFloat((mpi * frontDti).toFixed(4));\n  };\n  const getMonthlyPropertyTaxes = () => {\n    return parseFloat((apt / 12).toFixed(2));\n  };\n  const getMaxMonthlyPaymentNoTaxes = () => {\n    return parseFloat(\n      (getMaxMonthlyPayment() - getMonthlyPropertyTaxes()).toFixed(2)\n    );\n  };\n\n  const getMaxBackendPayment = () => {\n    return parseFloat((getMaxMonthlyPaymentNoTaxes() + mbeu).toFixed(2));\n  };\n\n  const getMaxBackendPaymentPercent = () => {\n    const results = parseFloat((getMaxBackendPayment() / mpi).toFixed(4) * 100);\n    return results;\n  };\n\n  const getMaxPaymentOrLoan = () => {\n    const PV = getPV(mi / 12, term * 12, getMaxMonthlyPaymentNoTaxes());\n    if (getMaxBackendPaymentPercent() < backDti * 100) {\n      if (!isPayment) {\n        setIsPayment(true);\n      }\n      return `Maximum payment: ${formatter.format(PV)}`;\n    } else if (getMaxBackendPaymentPercent() > backDti * 100) {\n      if (isPayment) {\n        setIsPayment(false);\n      }\n      return `Maximum Loan: ${formatter.format(PV)}`;\n    }\n  };\n\n  return (\n    <>\n      <div className=\"container\">\n        <Form layout=\"horizontal\" className=\"form\">\n          <Form.Item label=\"Monthly pretax income\" {...formItemLayout}>\n            <InputNumber\n              defaultValue={5000}\n              formatter={value =>\n                `$ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\n              }\n              parser={value => value.replace(/\\$\\s?|(,*)/g, \"\")}\n              onChange={handleMPI}\n            />\n          </Form.Item>\n\n          <Form.Item\n            label=\"Monthly bills excluding utilities\"\n            {...formItemLayout}\n          >\n            <InputNumber\n              defaultValue={500}\n              formatter={value =>\n                `$ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\n              }\n              parser={value => value.replace(/\\$\\s?|(,*)/g, \"\")}\n              onChange={handleMBEU}\n            />\n          </Form.Item>\n\n          <Form.Item\n            label=\"Annual Property Taxes/Insurance\"\n            {...formItemLayout}\n          >\n            <InputNumber\n              defaultValue={2500}\n              formatter={value =>\n                `$ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\n              }\n              parser={value => value.replace(/\\$\\s?|(,*)/g, \"\")}\n              onChange={handleAPT}\n            />\n          </Form.Item>\n\n          <Form.Item label=\"MI Rate\" {...formItemLayout}>\n            <InputNumber\n              // handleMI : MI Rate\n              defaultValue={35}\n              formatter={value =>\n                `${value} %`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\n              }\n              parser={value => value.replace(/\\$\\s?|(,*)/g, \"\")}\n              onChange={handleMI}\n            />\n          </Form.Item>\n\n          <Form.Item label=\"Interest Rate\" {...formItemLayout}>\n            <InputNumber\n              // Interest Rate\n              defaultValue={3.5}\n              formatter={value =>\n                `${value} %`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\n              }\n              parser={value => value.replace(/\\$\\s?|(,*)/g, \"\")}\n              onChange={handleInterest}\n            />\n          </Form.Item>\n\n          <Form.Item label=\"Term\" {...formItemLayout}>\n            <Select\n              defaultValue={30}\n              style={{ width: 88 }}\n              onChange={handleTerm}\n            >\n              <Option value={10}>10</Option>\n              <Option value={15}>15</Option>\n              <Option value={20}>20</Option>\n              <Option value={30}>30</Option>\n            </Select>\n          </Form.Item>\n\n          <Form.Item label=\"Front end DTI\" {...formItemLayout}>\n            <Select\n              defaultValue=\"43%\"\n              style={{ width: 88 }}\n              onChange={handleFrontDti}\n            >\n              <Option value={29}>29%</Option>\n              <Option value={36}>36%</Option>\n              <Option value={40}>40%</Option>\n              <Option value={46.99}>46.99%</Option>\n            </Select>\n          </Form.Item>\n\n          <Form.Item label=\"Back end DTI\" {...formItemLayout}>\n            <Select\n              defaultValue=\"49.55%\"\n              style={{ width: 88 }}\n              onChange={handleBackDti}\n            >\n              <Option value={41}>41%</Option>\n              <Option value={49.55}>49.55%</Option>\n              <Option value={56.99}>56.99%</Option>\n            </Select>\n          </Form.Item>\n        </Form>\n\n        <ul className=\"results\">\n          <li>\n            Maximum Monthly Payment:{\" \"}\n            <strong>{formatter.format(getMaxMonthlyPayment())}</strong>\n          </li>\n          <li>\n            Monthly Property Taxes:{\" \"}\n            <strong>{formatter.format(getMonthlyPropertyTaxes())}</strong>\n          </li>\n          <li>\n            Max monthly payment minus taxes:{\" \"}\n            <strong>{formatter.format(getMaxMonthlyPaymentNoTaxes())}</strong>\n          </li>\n\n          <li>\n            {/* {isPayment ? \"Maximum Payment\" : \"Maximum Loan\"} */}\n            Maxmimum Backend Payment:{\" \"}\n            <strong>{formatter.format(getMaxBackendPayment())}</strong>\n          </li>\n\n          <li>\n            Maximum backend payment percent :{\" \"}\n            <strong>{getMaxBackendPaymentPercent()}%</strong>\n          </li>\n          <li className=\"result\">{getMaxPaymentOrLoan()}</li>\n        </ul>\n      </div>\n    </>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import AppRouter from './components/Router';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n\n<App />\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}